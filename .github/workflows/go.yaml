name: Go
on:
  push:
    branches: [master]
    tags: [v*]
  pull_request:
    branches: [master]
jobs:
  docker:
    name: Docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/hydrui/hydrui
          tags: |
            type=edge
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          annotations: ${{ steps.meta.outputs.annotations }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          provenance: mode=max
          push: true
          sbom: true
        env:
          SOURCE_DATE_EPOCH: 0
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
      - name: Get Go dependencies
        run: go get -v -t -d ./...
      - name: Set up Node.JS
        uses: actions/setup-node@v4
      - name: Get NPM dependencies
        run: npm ci
      - name: Run Tests
        run: npm run test
      - name: Perform Linting
        run: npm run lint
      - name: Perform Code Generation
        run: npm run generate
      - name: Check for Unexpected Diff
        run: git diff --exit-code
      - name: Build Releases
        run: |
          for GOOS in darwin freebsd linux windows; do
            EXT=""
            if [ "$GOOS" == "windows" ]; then
              EXT=".exe"
            fi
            OS="$GOOS"
            if [ "$GOOS" == "darwin" ]; then
              OS="macos"
            fi
            for GOARCH in arm64 amd64; do
              CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o "bin/hydrui-${OS}-${GOARCH}${EXT}" ./cmd/hydrui-server
            done
          done
      - name: Upload builds
        uses: actions/upload-artifact@v4
        with:
          name: bin
          path: bin/*
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.JS
        uses: actions/setup-node@v4
      - name: Get NPM dependencies
        run: npm ci
      - name: Perform Code Generation
        run: npm run generate:pack
      - name: Lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.4.0
  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    steps:
      - name: Download builds
        uses: actions/download-artifact@v4
        with:
          name: bin
      - name: Zip builds
        run: |
          cd bin
          for i in *
          do
            zip "../$(basename $i).zip" "$(basename $i)"
          done
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            hydrui-macos-amd64.zip
            hydrui-macos-arm64.zip
            hydrui-freebsd-amd64.zip
            hydrui-freebsd-arm64.zip
            hydrui-linux-amd64.zip
            hydrui-linux-arm64.zip
            hydrui-windows-amd64.exe.zip
            hydrui-windows-arm64.exe.zip
